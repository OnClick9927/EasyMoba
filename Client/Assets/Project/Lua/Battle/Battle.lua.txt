BattlePlayMode = {
    Normal = 1,
    Local = 2,
    Recorder = 4,
}

local ScenePart = require("Battle.ScenePart")
Battle = {}
Battle.for_cs_call = require("Battle.BattleForCSCall")
Battle.local_input = CS.EasyMoba.LocalInputRecorder.instance
Battle.frame_unit_support = require("Battle.Logic.FrameUnitSupport")
Battle.frame_collection = require("Battle.Logic.FrameCollection")
Battle.logic = require("Battle.Logic.BattleLogic")

---@type number[]
local _players = nil
local mode_server
local _room_id
local _role_id

---@param battle_mode any
---@param room_id string
---@param players number[]
function Battle.StartGame(battle_mode, room_id, room_type, players)
    _players = players
    _room_id = room_id
    _role_id = Models.PlayerModel:GetRoleID()
    Battle.local_input.roleid = _role_id
    Battle.local_input.roomid = _room_id
    local collision_cfg

    mode_server = CS.EasyMoba.BattleModePlayer.Create(battle_mode, room_type, players)
    Battle.frame_collection.Start()
    Battle.frame_unit_support.Start(collision_cfg)
    ScenePart.LoadScene()
end

function Battle.CloseGame()
    Battle.frame_collection.Dispose()
    Battle.frame_unit_support.Dispose()
    mode_server:Dispose()
end

---------------------------------------------------------------------------------------
function Battle.CallServerReady()
    Battle.logic.CreateZeroUnit()
    Battle.logic.LoadSceneUnit()
    mode_server:CallServerReady(_role_id, _room_id)
end

function Battle.SendFrameToServer(frame_id)
    Battle.local_input.roleid = _role_id
    Battle.local_input.roomid = _room_id
    Battle.local_input.curframe = frame_id
    mode_server:SendFrameToServer()
end

function Battle.StartPlayLogic()
    GameTools.CloseAllUI()
end
