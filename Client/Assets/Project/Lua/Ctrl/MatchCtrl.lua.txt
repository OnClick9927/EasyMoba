local matchType = nil
local function Match()
    ---@type CSMatch
    local data = {}
    data.type = NetEventDefine.Enums.MatchRoomType.Normal
    matchType = data.type
    NetEvents.SendRequest(NetEventDefine.CSMatch, data)
end

local function DisMacth()
    ---@type CSDisMatch
    local data = {}
    data.type = matchType
    NetEvents.SendRequest(NetEventDefine.CSDisMatch, data)

end

---@param data SCMatch
local function OnSCMatch(data)
    if data.Code == NetEventDefine.Enums.MatchErrCode.Success then
        GameTools.ShowUI(PanelNames.MatchPanel)
    else
        Log.E("匹配错误 " .. data.Code)
    end
end

---@param data SCDisMatch
local function OnSCDisMatch(data)
    if data.Code == NetEventDefine.Enums.MatchErrCode.Success then
        GameTools.CloseUI(PanelNames.MatchPanel)
    else
        Log.E("匹配错误 " .. data.Code)
    end
end

---@param data SPMatchSuccess
local function OnMatchSucess(data)
    GameTools.CloseUI(PanelNames.MatchPanel)
    local players = {}
    for index, value in ipairs(data.roles or {}) do
        table.insert(players, value)
    end
    for index, value in ipairs(data.enemy or {}) do
        table.insert(players, value)
    end
    Ctrls.BattleCtrl.StartGame(CS.EasyMoba.GameLogic.Mono.BattlePlayMode.Normal, data.roomID, data.type, players)
end

NetEvents.SetHandler(NetEventDefine.SCMatch, OnSCMatch)
NetEvents.SetHandler(NetEventDefine.SCDisMatch, OnSCDisMatch)
NetEvents.SetHandler(NetEventDefine.SPMatchSuccess, OnMatchSucess)

local function LocalMatch()

    Ctrls.BattleCtrl.StartGame(CS.EasyMoba.GameLogic.Mono.BattlePlayMode.Local, "local",
        CS.MatchRoomType.Normal, { Models.PlayerModel:GetRoleID() })
end

return {
    Match = Match,
    DisMacth = DisMacth,
    LocalMatch = LocalMatch
}
